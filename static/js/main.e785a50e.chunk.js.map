{"version":3,"sources":["Components/CalenderView/DayOfMonth/DayOfMonth.js","Components/CalenderView/WeekDays/WeekDays.js","Components/TodoForm/TodoForm.js","Components/TodoView/TodoView.js","Components/DayWithTodos/DayWithTodos.js","Components/CalenderView/CalenderView.js","Components/ListTodosView/ListTodosView.js","Components/SwapView/SwapView.js","App.js","index.js"],"names":["DayOfMonth","day","placeHolder","today","active","cbFunc","hasTodos","className","id","onClick","WeekDays","divs","i","weekDay","moment","set","push","format","renderDivs","TodoForm","addTodo","updateMode","updateTodo","updateParams","setCurrentlyUpdating","dayToShow","useEffect","setInputDate","setInputDateValue","toISOString","split","setInputTitle","title","setInputDesc","description","deadline","useState","inputTitle","inputDesc","inputDate","inputDateValue","firstFocusInputElement","useRef","onSubmit","evt","preventDefault","uuidv4","current","focus","type","value","onChange","target","required","autoFocus","ref","endOf","fromNow","dateComponent","datePlusTime","newDate","TodoView","todoObj","crudOperations","handleTodoUpdate","confirmDeleteVisible","setConfirmDeleteVisible","dateAdded","parentNode","deleteTodo","DayWithTodos","todos","todosForThisDay","filter","todo","isSame","currentlyUpdating","setUpdateParams","length","map","CalenderView","momentObj","clone","currentViewDay","setCurrentViewDay","currentViewMonth","setCurrentViewMonth","currentViewYear","setCurrentViewYear","daysInThisMonth","setDaysInThisMonth","updateStates","parseInt","daysInMonth","dateClicked","clickedDate","textContent","date","subtract","add","components","numOfPlaceholderDays","startOf","itIsToday","itIsActive","checkIfDayHasTodos","renderDays","currentIterationDay","formattedParam","year","month","monthAsString","toString","dayAsString","formatDate","compareDate","numOfDeadlinesOnThisDate","forEach","activeDayAsInt","momentObjToday","todayAsInt","todayDateAsInt","todayMonthAsInt","todayYearAsInt","ListTodosView","sortedByDueDate","sort","compareByDates","defaultDate","momentObjFromTodo","a","b","aDate","bDate","isBefore","SwapView","App","showCalender","toggleShowCalender","JSON","parse","localStorage","getItem","setTodos","setItem","stringify","copyOfTodos","updatedTodoObj","find","callBacks","swapView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e785a50e.chunk.js","sourcesContent":["function DayOfMonth({ day, placeHolder, today, active, cbFunc, hasTodos }) {\r\n\tconst generateNotches = () => {\r\n\t\tlet innerText = `This day has ${hasTodos} todo${hasTodos > 1 ? 's' : ''}`;\r\n\t\treturn innerText;\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{placeHolder ? (\r\n\t\t\t\t<div className='placeholder grid-child'></div>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tid={day + '|day of this month'}\r\n\t\t\t\t\tclassName={`\r\n\t\t\t\t\t\t${today ? 'today' : ''}\r\n\t\t\t\t\t\t${active ? 'active-day' : ''}\r\n\t\t\t\t\t\t${hasTodos ? 'has-todos' : ''}\r\n\t\t\t\t\t\tday-div\r\n\t\t\t\t\t\tgrid-child\r\n\t\t\t\t\t`}\r\n\t\t\t\t\tonClick={cbFunc}\r\n\t\t\t\t>\r\n\t\t\t\t\t{hasTodos ? (\r\n\t\t\t\t\t\t<div className='notch-container'>{generateNotches()}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<> </>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='date-num'>{day}</div>\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DayOfMonth;\r\n","import moment from 'moment';\r\nfunction WeekDays() {\r\n\tconst renderDivs = () => {\r\n\t\tconst divs = [];\r\n\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\t\t\tconst weekDay = moment();\r\n\t\t\tweekDay.set('day', i);\r\n\t\t\tdivs.push(\r\n\t\t\t\t<div className='week-day-label' key={weekDay.format('dddd')}>\r\n\t\t\t\t\t{weekDay.format('dddd')}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn divs;\r\n\t};\r\n\treturn <div className='grid-container week-days'>{renderDivs()}</div>;\r\n}\r\n\r\nexport default WeekDays;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm({\r\n\taddTodo,\r\n\tupdateMode,\r\n\tupdateTodo,\r\n\tupdateParams,\r\n\tsetCurrentlyUpdating,\r\n\tdayToShow,\r\n}) {\r\n\tuseEffect(() => {\r\n\t\tif (dayToShow) {\r\n\t\t\tsetInputDate(dayToShow);\r\n\t\t\tsetInputDateValue(dayToShow.toISOString().split('T')[0]);\r\n\t\t}\r\n\r\n\t\tif (updateParams) {\r\n\t\t\tsetInputTitle(updateParams.title);\r\n\t\t\tsetInputDesc(updateParams.description);\r\n\t\t\tsetInputDate(moment(updateParams.deadline));\r\n\t\t\tsetInputDateValue(updateParams.deadline.split('T')[0]);\r\n\t\t}\r\n\t}, [updateParams]);\r\n\r\n\tconst [inputTitle, setInputTitle] = useState('');\r\n\tconst [inputDesc, setInputDesc] = useState('');\r\n\tconst [inputDate, setInputDate] = useState(moment());\r\n\tconst [inputDateValue, setInputDateValue] = useState(\r\n\t\tmoment().toISOString().split('T')[0]\r\n\t);\r\n\r\n\tconst firstFocusInputElement = useRef(null);\r\n\r\n\tconst handleSubmit = (evt) => {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (updateMode) {\r\n\t\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\t\t// Send new updateObj to App.js\r\n\t\t\tupdateTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate.toISOString(),\r\n\t\t\t\tid: updateParams.id,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\taddTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate.toISOString(),\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(moment());\r\n\r\n\t\t// Focus on Title\r\n\t\tfirstFocusInputElement.current.focus();\r\n\t};\r\n\r\n\tconst handleTitleChange = ({ target }) => {\r\n\t\tsetInputTitle(target.value);\r\n\t};\r\n\r\n\tconst handleDescriptionChange = ({ target }) => {\r\n\t\tsetInputDesc(target.value);\r\n\t};\r\n\r\n\tconst handleDateChange = ({ target }) => {\r\n\t\tlet dateComponent = target.value;\r\n\r\n\t\tlet timeComponent = moment(inputDate).toISOString().split('T')[1];\r\n\r\n\t\tlet datePlusTime = dateComponent + 'T' + timeComponent;\r\n\r\n\t\tlet newDate = moment(datePlusTime);\r\n\r\n\t\tsetInputDate(newDate);\r\n\t\tsetInputDateValue(dateComponent);\r\n\t};\r\n\tconst cancelUpdate = () => {\r\n\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(moment());\r\n\t\tsetInputDateValue(moment().toISOString().split('T')[0]);\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<label>\r\n\t\t\t\tTitle\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={inputTitle}\r\n\t\t\t\t\tonChange={handleTitleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tref={firstFocusInputElement}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tAdditional info\r\n\t\t\t\t<textarea value={inputDesc} onChange={handleDescriptionChange} />\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tDeadline: <b>{inputDate.endOf('days').fromNow()}</b>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='date'\r\n\t\t\t\t\tvalue={inputDateValue}\r\n\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<div className='submit-btn-div'>\r\n\t\t\t\t<button type='submit'>\r\n\t\t\t\t\t{updateMode ? 'Update todo' : 'Add new Todo'}\r\n\t\t\t\t</button>\r\n\t\t\t\t{updateMode ? (\r\n\t\t\t\t\t<button type='button' onClick={cancelUpdate}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<></>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default TodoForm;\r\n","import { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\n\r\nimport './TodoView.css';\r\n\r\nfunction TodoView({ todoObj, crudOperations, handleTodoUpdate }) {\r\n\tconst [confirmDeleteVisible, setConfirmDeleteVisible] = useState(false);\r\n\r\n\tconst handleUpdateTodo = () => {\r\n\t\thandleTodoUpdate(todoObj);\r\n\t};\r\n\r\n\tconst handleDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(true);\r\n\t};\r\n\r\n\tconst cancelConfirmDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\tconst confirmDeleteTodo = ({ target }) => {\r\n\t\tconst id = target.parentNode.parentNode.id;\r\n\t\tcrudOperations.deleteTodo(id);\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='todo-view' id={todoObj.id}>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>{todoObj.title}</h4>\r\n\t\t\t\t<p>{todoObj.description}</p>\r\n\t\t\t\t<span>{todoObj.dateAdded}</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{confirmDeleteVisible ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={confirmDeleteTodo}>Confirm delete</button>\r\n\t\t\t\t\t\t<button onClick={cancelConfirmDeleteTodo}>Cancel delete</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={handleDeleteTodo}>Delete</button>\r\n\t\t\t\t\t\t<button onClick={handleUpdateTodo}>Update</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default TodoView;\r\n","import { useState } from 'react';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport TodoView from '../TodoView/TodoView';\r\n\r\nfunction DayWithTodos({ dayToShow, todos, crudOperations }) {\r\n\tconst todosForThisDay = todos.filter((todo) =>\r\n\t\tdayToShow.isSame(todo.deadline, 'date')\r\n\t);\r\n\r\n\tconst [currentlyUpdating, setCurrentlyUpdating] = useState(false);\r\n\tconst [updateParams, setUpdateParams] = useState({});\r\n\r\n\tconst handleTodoUpdate = (todoObj) => {\r\n\t\tsetCurrentlyUpdating(true);\r\n\t\tsetUpdateParams(todoObj);\r\n\t};\r\n\r\n\treturn currentlyUpdating ? (\r\n\t\t<TodoForm\r\n\t\t\taddTodo={crudOperations.addTodo}\r\n\t\t\tupdateTodo={crudOperations.updateTodo}\r\n\t\t\tupdateParams={updateParams}\r\n\t\t\tupdateMode={true}\r\n\t\t\tsetCurrentlyUpdating={setCurrentlyUpdating}\r\n\t\t\tdayToShow={dayToShow}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div>\r\n\t\t\t<h3>\r\n\t\t\t\tTodos due on <u>{dayToShow.format('D [of] MMMM, YYYY')}</u>\r\n\t\t\t</h3>\r\n\t\t\t{todosForThisDay.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{todosForThisDay.map((todoObj) => (\r\n\t\t\t\t\t\t<TodoView\r\n\t\t\t\t\t\t\tkey={todoObj.id}\r\n\t\t\t\t\t\t\ttodoObj={todoObj}\r\n\t\t\t\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t\t\t\t\thandleTodoUpdate={handleTodoUpdate}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<i>No todos due this day...</i>\r\n\t\t\t)}\r\n\t\t\t<TodoForm addTodo={crudOperations.addTodo} dayToShow={dayToShow} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DayWithTodos;\r\n","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport DayOfMonth from './DayOfMonth/DayOfMonth';\r\n\r\nimport './CalenderView.css';\r\nimport WeekDays from './WeekDays/WeekDays';\r\nimport DayWithTodos from '../DayWithTodos/DayWithTodos';\r\n\r\nfunction CalenderView({ todos, crudOperations }) {\r\n\tconst [momentObj, setMomentObject] = useState(() => moment());\r\n\tconst [today, setToday] = useState(momentObj.clone());\r\n\r\n\tconst [currentViewDay, setCurrentViewDay] = useState();\r\n\tconst [currentViewMonth, setCurrentViewMonth] = useState();\r\n\tconst [currentViewYear, setCurrentViewYear] = useState();\r\n\r\n\tconst [daysInThisMonth, setDaysInThisMonth] = useState();\r\n\r\n\t// console.log('currentDayInFocus: ', currentDayInFocus);\r\n\r\n\tconst updateStates = () => {\r\n\t\tsetCurrentViewDay(parseInt(momentObj.format('D'), 10));\r\n\t\tsetCurrentViewMonth(parseInt(momentObj.format('M'), 10));\r\n\t\tsetCurrentViewYear(parseInt(momentObj.format('YYYY'), 10));\r\n\t\tsetDaysInThisMonth(momentObj.daysInMonth());\r\n\t};\r\n\r\n\t// Only fired once since momentObj is only ever mutated, never re-assigned\r\n\t// Basically componentDidMount\r\n\tuseEffect(() => {\r\n\t\tupdateStates();\r\n\t}, []);\r\n\r\n\tconst prevMonth = () => {\r\n\t\tmomentObj.subtract(1, 'M');\r\n\t\tupdateStates();\r\n\t};\r\n\r\n\tconst nextMonth = () => {\r\n\t\tmomentObj.add(1, 'M');\r\n\t\tupdateStates();\r\n\t};\r\n\r\n\tconst dateClicked = ({ target }) => {\r\n\t\tlet clickedDate;\r\n\t\tif (target.textContent === '|') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.parentNode.id.split('|')[0]);\r\n\t\t} else if (target.id === '') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.id.split('|')[0]);\r\n\t\t} else {\r\n\t\t\tclickedDate = parseInt(target.id.split('|')[0]);\r\n\t\t}\r\n\t\tsetCurrentViewDay(clickedDate);\r\n\t\tmomentObj.date(clickedDate);\r\n\t};\r\n\r\n\tconst renderDays = () => {\r\n\t\tconst components = [];\r\n\r\n\t\t// Get weekday of first of month as int to create \"shadow-days\" when a month doesnt start on a sunday\r\n\t\tconst numOfPlaceholderDays = momentObj.clone().startOf('month').format('e');\r\n\t\tfor (let i = 1; i <= numOfPlaceholderDays; i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth key={`null ${i} of month`} placeHolder={true} />\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tfor (let i = 1; i <= daysInThisMonth; i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth\r\n\t\t\t\t\tkey={`Day ${i} of month`}\r\n\t\t\t\t\tplaceHolder={false}\r\n\t\t\t\t\tday={i}\r\n\t\t\t\t\t// Today is only true when it's today\r\n\t\t\t\t\ttoday={itIsToday(today, currentViewMonth, currentViewYear, i)}\r\n\t\t\t\t\tactive={itIsActive(currentViewDay, i)}\r\n\t\t\t\t\tcbFunc={dateClicked}\r\n\t\t\t\t\thasTodos={checkIfDayHasTodos(\r\n\t\t\t\t\t\tcurrentViewMonth,\r\n\t\t\t\t\t\tcurrentViewYear,\r\n\t\t\t\t\t\ti,\r\n\t\t\t\t\t\ttodos\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn components;\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='month-view'>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\t<i>\r\n\t\t\t\t\t\t{momentObj.format('MMMM')} - {momentObj.format('YYYY')}\r\n\t\t\t\t\t</i>\r\n\t\t\t\t</h2>\r\n\t\t\t\t<button onClick={prevMonth}>Prev month</button>\r\n\t\t\t\t<button onClick={nextMonth}>Next month</button>\r\n\t\t\t\t<WeekDays />\r\n\t\t\t\t<div className='grid-container calender-days'>{renderDays()}</div>\r\n\t\t\t</div>\r\n\t\t\t<DayWithTodos\r\n\t\t\t\tdayToShow={momentObj}\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CalenderView;\r\n\r\nfunction checkIfDayHasTodos(\r\n\tcurrentViewMonth,\r\n\tcurrentViewYear,\r\n\tcurrentIterationDay,\r\n\ttodos\r\n) {\r\n\tconst formattedParam = formatDate(\r\n\t\tcurrentViewYear,\r\n\t\tcurrentViewMonth,\r\n\t\tcurrentIterationDay\r\n\t);\r\n\tconst compareDate = moment(formattedParam).format('YYYY-MM-DD');\r\n\r\n\tlet numOfDeadlinesOnThisDate = 0;\r\n\ttodos.forEach((todo) => {\r\n\t\tconst thisDayHasDeadlines = todo.deadline.split('T')[0] === compareDate;\r\n\t\tif (thisDayHasDeadlines) {\r\n\t\t\tnumOfDeadlinesOnThisDate++;\r\n\t\t}\r\n\t});\r\n\r\n\treturn numOfDeadlinesOnThisDate;\r\n}\r\n\r\nfunction itIsActive(currentViewDay, activeDayAsInt) {\r\n\treturn activeDayAsInt === currentViewDay;\r\n}\r\n\r\nfunction itIsToday(\r\n\tmomentObjToday,\r\n\tcurrentViewMonth,\r\n\tcurrentViewYear,\r\n\ttodayAsInt\r\n) {\r\n\t// Check if today is in the currentViewMonth\r\n\tconst todayDateAsInt = parseInt(momentObjToday.format('D'), 10);\r\n\tconst todayMonthAsInt = parseInt(momentObjToday.format('M'), 10);\r\n\tconst todayYearAsInt = parseInt(momentObjToday.format('YYYY'), 10);\r\n\r\n\tconst correctMonth = todayMonthAsInt === currentViewMonth;\r\n\tconst correctYear = todayYearAsInt === currentViewYear;\r\n\tconst correctDay = todayDateAsInt === todayAsInt;\r\n\r\n\treturn correctMonth && correctYear && correctDay;\r\n}\r\n\r\nfunction formatDate(year, month, day) {\r\n\t// If month.toString.length = 1\r\n\t// add leading 0\r\n\tlet monthAsString = month.toString();\r\n\tif (monthAsString.length === 1) monthAsString = '0' + monthAsString;\r\n\r\n\t// If day.toString.length = 1\r\n\t// add leading 0\r\n\tlet dayAsString = day.toString();\r\n\tif (dayAsString.length === 1) dayAsString = '0' + dayAsString;\r\n\r\n\tconst formatted = `${year}-${monthAsString}-${dayAsString}`;\r\n\treturn formatted;\r\n}\r\n","import { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './ListTodosView.css';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport TodoView from '../TodoView/TodoView';\r\n\r\nfunction ListTodosView({ todos, crudOperations }) {\r\n\tconst [currentlyUpdating, setCurrentlyUpdating] = useState(false);\r\n\tconst [updateParams, setUpdateParams] = useState({});\r\n\r\n\tconst handleTodoUpdate = (todoObj) => {\r\n\t\tsetCurrentlyUpdating(true);\r\n\t\tsetUpdateParams(todoObj);\r\n\t};\r\n\r\n\tconst sortedByDueDate = [...todos.sort(compareByDates)];\r\n\treturn currentlyUpdating ? (\r\n\t\t<TodoForm\r\n\t\t\taddTodo={crudOperations.addTodo}\r\n\t\t\tupdateTodo={crudOperations.updateTodo}\r\n\t\t\tdefaultDate={moment(updateParams.deadline)}\r\n\t\t\tupdateParams={updateParams}\r\n\t\t\tupdateMode={true}\r\n\t\t\tsetCurrentlyUpdating={setCurrentlyUpdating}\r\n\t\t/>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<TodoForm addTodo={crudOperations.addTodo} defaultDate={moment()} />\r\n\t\t\t<div className='all-todos-listed'>\r\n\t\t\t\t{sortedByDueDate.map((todo, i) => {\r\n\t\t\t\t\tconst momentObjFromTodo = moment(todo.deadline);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<TodoView\r\n\t\t\t\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\ttodoObj={todo}\r\n\t\t\t\t\t\t\tmomentObjFromTodo={momentObjFromTodo}\r\n\t\t\t\t\t\t\thandleTodoUpdate={handleTodoUpdate}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ListTodosView;\r\n\r\nfunction compareByDates(a, b) {\r\n\tconst aDate = moment(a.deadline);\r\n\tconst bDate = moment(b.deadline);\r\n\r\n\tlet returnValue;\r\n\taDate.isBefore(bDate)\r\n\t\t? (returnValue = -1)\r\n\t\t: bDate.isBefore(aDate)\r\n\t\t? (returnValue = 1)\r\n\t\t: (returnValue = 0);\r\n\r\n\treturn returnValue;\r\n}\r\n","function SwapView({ cbFunc }) {\r\n\treturn <button onClick={cbFunc}>Swap view</button>;\r\n}\r\n\r\nexport default SwapView;\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport CalenderView from './Components/CalenderView/CalenderView';\r\nimport ListTodosView from './Components/ListTodosView/ListTodosView';\r\nimport SwapView from './Components/SwapView/SwapView';\r\n\r\nfunction App() {\r\n\tconst [showCalender, toggleShowCalender] = useState(false);\r\n\r\n\tconst [todos, setTodos] = useState(\r\n\t\tJSON.parse(localStorage.getItem('todos')) || []\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t}, [todos]);\r\n\r\n\tconst crudOperations = {\r\n\t\taddTodo: (todoObj) => {\r\n\t\t\tconst copyOfTodos = [...todos];\r\n\t\t\tcopyOfTodos.push(todoObj);\r\n\t\t\tsetTodos(copyOfTodos);\r\n\t\t},\r\n\t\tdeleteTodo: (id) => {\r\n\t\t\t// Make copy of todos\r\n\t\t\t// Filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\t// Replace old todos with copy\r\n\t\t\tsetTodos(copyOfTodos);\r\n\t\t},\r\n\t\tupdateTodo: (updatedTodoObj) => {\r\n\t\t\t// Find relevant entry\r\n\t\t\tconst todoToBeUpdated = todos.find(\r\n\t\t\t\t(todo) => todo.id === updatedTodoObj.id\r\n\t\t\t);\r\n\r\n\t\t\t// Make copy of todos\r\n\t\t\t// Filter out the updated todo\r\n\t\t\tconst copyOfTodos = [...todos].filter(\r\n\t\t\t\t(todo) => todo.id !== updatedTodoObj.id\r\n\t\t\t);\r\n\r\n\t\t\t// Add new version of updated todo to todos\r\n\t\t\tcopyOfTodos.push(updatedTodoObj);\r\n\t\t\t// Replace old todos with copy\r\n\t\t\tsetTodos(copyOfTodos);\r\n\t\t},\r\n\t};\r\n\r\n\tconst callBacks = {\r\n\t\tswapView: () => {\r\n\t\t\ttoggleShowCalender(!showCalender);\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<SwapView cbFunc={callBacks.swapView} />\r\n\t\t\t{showCalender ? (\r\n\t\t\t\t<CalenderView todos={todos} crudOperations={crudOperations} />\r\n\t\t\t) : (\r\n\t\t\t\t<ListTodosView todos={todos} crudOperations={crudOperations} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}