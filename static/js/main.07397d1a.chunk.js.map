{"version":3,"sources":["Components/CalenderView/DayOfMonth/DayOfMonth.js","Components/CalenderView/WeekDays/WeekDays.js","Components/TodoForm/TodoForm.js","Components/TodoView/TodoView.js","Components/ListTodosView/ListTodosView.js","Components/DayWithTodos/DayWithTodos.js","Components/CalenderView/CalenderView.js","App.js","index.js"],"names":["DayOfMonth","day","placeHolder","today","active","cbFunc","hasTodos","className","id","onClick","WeekDays","divs","i","weekDay","moment","set","push","format","renderDivs","TodoForm","addTodo","updateTodo","dayToShow","updateMode","updateParams","setCurrentlyUpdating","useState","inputTitle","setInputTitle","inputDesc","setInputDesc","inputDate","setInputDate","toISOString","split","inputDateValue","setInputDateValue","firstFocusInputElement","useRef","useEffect","console","log","current","focus","title","description","deadline","onSubmit","evt","preventDefault","uuidv4","type","value","onChange","target","required","autoFocus","ref","endOf","fromNow","dateComponent","datePlusTime","newDate","TodoView","todoObj","toggleCompleteTodo","deleteTodo","beginEdit","confirmDeleteVisible","setConfirmDeleteVisible","completed","dateAdded","ListTodosView","todos","crudOperations","insideDayWithTodos","showingText","currentlyUpdating","setUpdateParams","showIncompleteOnly","toggleShowIncompleteOnly","handleTodoUpdate","sortedByDueDate","sort","compareByDates","filter","todo","map","momentObjFromTodo","a","b","aDate","bDate","isBefore","DayWithTodos","todosForThisDay","isSame","length","CalenderView","momentObj","clone","currentViewDay","setCurrentViewDay","currentViewMonth","setCurrentViewMonth","currentViewYear","setCurrentViewYear","daysInThisMonth","setDaysInThisMonth","updateStates","parseInt","daysInMonth","dateClicked","clickedDate","textContent","parentNode","date","subtract","add","components","numOfPlaceholderDays","startOf","itIsToday","itIsActive","checkIfDayHasTodos","renderDays","currentIterationDay","formattedParam","year","month","monthAsString","toString","dayAsString","formatDate","compareDate","numOfDeadlinesOnThisDate","forEach","activeDayAsInt","momentObjToday","todayAsInt","todayDateAsInt","todayMonthAsInt","todayYearAsInt","App","JSON","parse","localStorage","getItem","setTodos","setItem","stringify","copyOfTodos","todoToBeUpdated","find","updatedTodoObj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07397d1a.chunk.js","sourcesContent":["function DayOfMonth({ day, placeHolder, today, active, cbFunc, hasTodos }) {\r\n\tconst generateNotches = () => {\r\n\t\tlet innerText = `This day has ${hasTodos} todo${hasTodos > 1 ? 's' : ''}`;\r\n\t\treturn innerText;\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{placeHolder ? (\r\n\t\t\t\t<div className='placeholder grid-child'></div>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tid={day + '|day of this month'}\r\n\t\t\t\t\tclassName={`\r\n\t\t\t\t\t\t${today ? 'today' : ''}\r\n\t\t\t\t\t\t${active ? 'active-day' : ''}\r\n\t\t\t\t\t\t${hasTodos ? 'has-todos' : ''}\r\n\t\t\t\t\t\tday-div\r\n\t\t\t\t\t\tgrid-child\r\n\t\t\t\t\t`}\r\n\t\t\t\t\tonClick={cbFunc}\r\n\t\t\t\t>\r\n\t\t\t\t\t{hasTodos ? (\r\n\t\t\t\t\t\t<div className='notch-container'>{generateNotches()}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<> </>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='date-num'>{day}</div>\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DayOfMonth;\r\n","import moment from 'moment';\r\nfunction WeekDays() {\r\n\tconst renderDivs = () => {\r\n\t\tconst divs = [];\r\n\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\t\t\tconst weekDay = moment();\r\n\t\t\tweekDay.set('day', i);\r\n\t\t\tdivs.push(\r\n\t\t\t\t<div className='week-day-label' key={weekDay.format('dddd')}>\r\n\t\t\t\t\t{weekDay.format('dddd')}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn divs;\r\n\t};\r\n\treturn <div className='grid-container week-days'>{renderDivs()}</div>;\r\n}\r\n\r\nexport default WeekDays;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm({\r\n\taddTodo,\r\n\tupdateTodo,\r\n\tdayToShow,\r\n\tupdateMode,\r\n\tupdateParams,\r\n\tsetCurrentlyUpdating,\r\n}) {\r\n\tconst [inputTitle, setInputTitle] = useState('');\r\n\tconst [inputDesc, setInputDesc] = useState('');\r\n\tconst [inputDate, setInputDate] = useState(moment());\r\n\tconst [inputDateValue, setInputDateValue] = useState(\r\n\t\tmoment().toISOString().split('T')[0]\r\n\t);\r\n\r\n\tconst firstFocusInputElement = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('Should run when clicking on any day!');\r\n\t\tif (dayToShow) {\r\n\t\t\tsetInputDate(dayToShow);\r\n\t\t\tsetInputDateValue(dayToShow.toISOString().split('T')[0]);\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('Should run when clicking on any day!');\r\n\t\t// Makes sure title input is in focus even when initiating an update\r\n\t\tfirstFocusInputElement.current.focus();\r\n\r\n\t\tif (updateParams) {\r\n\t\t\tsetInputTitle(updateParams.title);\r\n\t\t\tsetInputDesc(updateParams.description);\r\n\t\t\tsetInputDate(moment(updateParams.deadline));\r\n\t\t\tsetInputDateValue(updateParams.deadline.split('T')[0]);\r\n\t\t}\r\n\t}, [updateMode, dayToShow, inputDate]);\r\n\r\n\tconst handleSubmit = (evt) => {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (updateMode) {\r\n\t\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\t\t// Send new updateObj to App.js\r\n\t\t\tupdateTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate.toISOString(),\r\n\t\t\t\tid: updateParams.id,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\taddTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate.toISOString(),\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(moment());\r\n\t\tsetInputDateValue(moment().toISOString().split('T')[0]);\r\n\r\n\t\t// Focus on Title\r\n\t\tfirstFocusInputElement.current.focus();\r\n\t};\r\n\r\n\tconst handleTitleChange = ({ target }) => {\r\n\t\tsetInputTitle(target.value);\r\n\t};\r\n\r\n\tconst handleDescriptionChange = ({ target }) => {\r\n\t\tsetInputDesc(target.value);\r\n\t};\r\n\r\n\tconst handleDateChange = ({ target }) => {\r\n\t\tlet dateComponent = target.value;\r\n\r\n\t\tlet timeComponent = moment(inputDate).toISOString().split('T')[1];\r\n\r\n\t\tlet datePlusTime = dateComponent + 'T' + timeComponent;\r\n\r\n\t\tlet newDate = moment(datePlusTime);\r\n\r\n\t\tsetInputDate(newDate);\r\n\t\tsetInputDateValue(dateComponent);\r\n\t};\r\n\tconst cancelUpdate = () => {\r\n\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(moment());\r\n\t\tsetInputDateValue(moment().toISOString().split('T')[0]);\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<label>\r\n\t\t\t\tTitle\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={inputTitle}\r\n\t\t\t\t\tonChange={handleTitleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tref={firstFocusInputElement}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tAdditional info\r\n\t\t\t\t<textarea value={inputDesc} onChange={handleDescriptionChange} />\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tDeadline: <b>{inputDate.endOf('days').fromNow()}</b>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='date'\r\n\t\t\t\t\tvalue={inputDateValue}\r\n\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<div className='submit-btn-div'>\r\n\t\t\t\t<button type='submit'>\r\n\t\t\t\t\t{updateMode ? 'Update todo' : 'Add new Todo'}\r\n\t\t\t\t</button>\r\n\t\t\t\t{updateMode && (\r\n\t\t\t\t\t<button type='button' onClick={cancelUpdate}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default TodoForm;\r\n","import { useState } from 'react';\r\n\r\nimport './TodoView.css';\r\n\r\nfunction TodoView({ todoObj, toggleCompleteTodo, deleteTodo, beginEdit }) {\r\n\tconst [confirmDeleteVisible, setConfirmDeleteVisible] = useState(false);\r\n\r\n\tconst handleCompleteTodo = () => {\r\n\t\ttoggleCompleteTodo(todoObj);\r\n\t};\r\n\r\n\tconst handleUpdateTodo = () => {\r\n\t\tbeginEdit(todoObj);\r\n\t};\r\n\r\n\tconst handleDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(true);\r\n\t};\r\n\r\n\tconst cancelConfirmDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\tconst confirmDeleteTodo = () => {\r\n\t\tdeleteTodo(todoObj.id);\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`\r\n\t\t\ttodo-view\r\n\t\t\t${todoObj.completed ? 'todo-completed' : ''}\r\n\t\t`}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>{todoObj.title}</h4>\r\n\t\t\t\t<p>{todoObj.description}</p>\r\n\t\t\t\t<span>{todoObj.dateAdded}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className='todo-btns'>\r\n\t\t\t\t{confirmDeleteVisible ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={confirmDeleteTodo}>Confirm delete</button>\r\n\t\t\t\t\t\t<button onClick={cancelConfirmDeleteTodo}>Cancel delete</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={handleDeleteTodo}>Delete</button>\r\n\t\t\t\t\t\t<button onClick={handleUpdateTodo}>Update</button>\r\n\t\t\t\t\t\t<button onClick={handleCompleteTodo}>\r\n\t\t\t\t\t\t\t{todoObj.completed ? 'Unmark as complete' : 'Mark as complete'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default TodoView;\r\n","import { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './ListTodosView.css';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport TodoView from '../TodoView/TodoView';\r\n\r\nfunction ListTodosView({\r\n\ttodos,\r\n\tcrudOperations,\r\n\tinsideDayWithTodos,\r\n\tshowingText,\r\n\tdayToShow,\r\n}) {\r\n\tconst [currentlyUpdating, setCurrentlyUpdating] = useState(false);\r\n\tconst [updateParams, setUpdateParams] = useState({});\r\n\r\n\tconst [showIncompleteOnly, toggleShowIncompleteOnly] = useState(false);\r\n\r\n\tconst handleTodoUpdate = (todoObj) => {\r\n\t\tsetCurrentlyUpdating(true);\r\n\t\tsetUpdateParams(todoObj);\r\n\t};\r\n\r\n\tlet sortedByDueDate = [...todos.sort(compareByDates)];\r\n\tif (showIncompleteOnly)\r\n\t\tsortedByDueDate = [...sortedByDueDate.filter((todo) => !todo.completed)];\r\n\tconsole.log(sortedByDueDate);\r\n\treturn currentlyUpdating ? (\r\n\t\t<TodoForm\r\n\t\t\taddTodo={crudOperations.addTodo}\r\n\t\t\tupdateTodo={crudOperations.updateTodo}\r\n\t\t\tupdateParams={updateParams}\r\n\t\t\tupdateMode={true}\r\n\t\t\tsetCurrentlyUpdating={setCurrentlyUpdating}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div\r\n\t\t\tclassName={`\r\n\t\t\t${showingText ? 'testing-grid' : ''}\r\n\t\t`}\r\n\t\t>\r\n\t\t\t{showingText ? (\r\n\t\t\t\t<TodoForm addTodo={crudOperations.addTodo} dayToShow={dayToShow} />\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\r\n\t\t\t<div\r\n\t\t\t\tclassName={`${\r\n\t\t\t\t\tinsideDayWithTodos\r\n\t\t\t\t\t\t? 'list-todos-component-inside-day-with-todos'\r\n\t\t\t\t\t\t: 'list-todos-component'\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t{showIncompleteOnly\r\n\t\t\t\t\t\t? `${\r\n\t\t\t\t\t\t\t\tshowingText\r\n\t\t\t\t\t\t\t\t\t? `Showing only incomplete todos due on ${showingText}`\r\n\t\t\t\t\t\t\t\t\t: 'Showing: All'\r\n\t\t\t\t\t\t  }`\r\n\t\t\t\t\t\t: `${\r\n\t\t\t\t\t\t\t\tshowingText\r\n\t\t\t\t\t\t\t\t\t? `Showing all todos due on: ${showingText}`\r\n\t\t\t\t\t\t\t\t\t: 'Showing: Only incomplete'\r\n\t\t\t\t\t\t  }`}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{showIncompleteOnly\r\n\t\t\t\t\t\t? 'Click to show all'\r\n\t\t\t\t\t\t: 'Click to show only incomplete'}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tonClick={() => toggleShowIncompleteOnly(!showIncompleteOnly)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`\r\n\t\t\tall-todos-listed\r\n\t\t\t${insideDayWithTodos ? 'inside-day-with-todos' : ''}\r\n\t\t\t`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{sortedByDueDate.map((todo) => {\r\n\t\t\t\t\t\tconst momentObjFromTodo = moment(todo.deadline);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TodoView\r\n\t\t\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\t\t\ttodoObj={todo}\r\n\t\t\t\t\t\t\t\ttoggleCompleteTodo={crudOperations.toggleCompleteTodo}\r\n\t\t\t\t\t\t\t\tdeleteTodo={crudOperations.deleteTodo}\r\n\t\t\t\t\t\t\t\tmomentObjFromTodo={momentObjFromTodo}\r\n\t\t\t\t\t\t\t\tbeginEdit={handleTodoUpdate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListTodosView;\r\n\r\nfunction compareByDates(a, b) {\r\n\tconst aDate = moment(a.deadline);\r\n\tconst bDate = moment(b.deadline);\r\n\r\n\tlet returnValue;\r\n\taDate.isBefore(bDate)\r\n\t\t? (returnValue = -1)\r\n\t\t: bDate.isBefore(aDate)\r\n\t\t? (returnValue = 1)\r\n\t\t: (returnValue = 0);\r\n\r\n\treturn returnValue;\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport './DayWithTodos.css';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport ListTodosView from '../ListTodosView/ListTodosView';\r\n\r\nfunction DayWithTodos({ dayToShow, todos, crudOperations }) {\r\n\tconst todosForThisDay = todos.filter((todo) =>\r\n\t\tdayToShow.isSame(todo.deadline, 'date')\r\n\t);\r\n\r\n\tconst [currentlyUpdating, setCurrentlyUpdating] = useState(false);\r\n\tconst [updateParams, setUpdateParams] = useState({});\r\n\r\n\tconst handleTodoUpdate = (todoObj) => {\r\n\t\tsetCurrentlyUpdating(true);\r\n\t\tsetUpdateParams(todoObj);\r\n\t};\r\n\r\n\treturn currentlyUpdating ? (\r\n\t\t<TodoForm\r\n\t\t\taddTodo={crudOperations.addTodo}\r\n\t\t\tupdateTodo={crudOperations.updateTodo}\r\n\t\t\tupdateParams={updateParams}\r\n\t\t\tupdateMode={true}\r\n\t\t\tsetCurrentlyUpdating={setCurrentlyUpdating}\r\n\t\t\tdayToShow={dayToShow}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div className='day-with-todos'>\r\n\t\t\t<div className='grid-day-with-todos'>\r\n\t\t\t\t{todosForThisDay.length > 0 ? (\r\n\t\t\t\t\t<ListTodosView\r\n\t\t\t\t\t\ttodos={todosForThisDay}\r\n\t\t\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t\t\t\tinsideDayWithTodos={true}\r\n\t\t\t\t\t\tshowingText={dayToShow.format('D [of] MMMM, YYYY')}\r\n\t\t\t\t\t\tdayToShow={dayToShow}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='day-w-out-todos'>\r\n\t\t\t\t\t\t<TodoForm addTodo={crudOperations.addTodo} dayToShow={dayToShow} />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<i>No todos due this day...</i>{' '}\r\n\t\t\t\t\t\t\t<u>{dayToShow.format('D [of] MMMM, YYYY')}</u>\r\n\t\t\t\t\t\t\t<p>Use the form to add a new todo on this day!</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DayWithTodos;\r\n","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport DayOfMonth from './DayOfMonth/DayOfMonth';\r\n\r\nimport './CalenderView.css';\r\nimport WeekDays from './WeekDays/WeekDays';\r\nimport DayWithTodos from '../DayWithTodos/DayWithTodos';\r\n\r\nfunction CalenderView({ todos, crudOperations }) {\r\n\tconst [momentObj, setMomentObject] = useState(() => moment());\r\n\tconst [today, setToday] = useState(momentObj.clone());\r\n\r\n\tconst [currentViewDay, setCurrentViewDay] = useState();\r\n\tconst [currentViewMonth, setCurrentViewMonth] = useState();\r\n\tconst [currentViewYear, setCurrentViewYear] = useState();\r\n\r\n\tconst [daysInThisMonth, setDaysInThisMonth] = useState();\r\n\r\n\t// console.log('currentDayInFocus: ', currentDayInFocus);\r\n\r\n\tconst updateStates = () => {\r\n\t\tsetCurrentViewDay(parseInt(momentObj.format('D'), 10));\r\n\t\tsetCurrentViewMonth(parseInt(momentObj.format('M'), 10));\r\n\t\tsetCurrentViewYear(parseInt(momentObj.format('YYYY'), 10));\r\n\t\tsetDaysInThisMonth(momentObj.daysInMonth());\r\n\t};\r\n\r\n\t// Only fired once since momentObj is only ever mutated, never re-assigned\r\n\t// Basically componentDidMount\r\n\tuseEffect(() => {\r\n\t\tupdateStates();\r\n\t}, []);\r\n\r\n\tconst prevMonth = () => {\r\n\t\tmomentObj.subtract(1, 'M');\r\n\t\tupdateStates();\r\n\t};\r\n\r\n\tconst nextMonth = () => {\r\n\t\tmomentObj.add(1, 'M');\r\n\t\tupdateStates();\r\n\t};\r\n\r\n\tconst dateClicked = ({ target }) => {\r\n\t\tlet clickedDate;\r\n\t\tif (target.textContent === '|') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.parentNode.id.split('|')[0]);\r\n\t\t} else if (target.id === '') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.id.split('|')[0]);\r\n\t\t} else {\r\n\t\t\tclickedDate = parseInt(target.id.split('|')[0]);\r\n\t\t}\r\n\t\tsetCurrentViewDay(clickedDate);\r\n\t\tmomentObj.date(clickedDate);\r\n\t};\r\n\r\n\tconst renderDays = () => {\r\n\t\tconst components = [];\r\n\r\n\t\t// Get weekday of first of month as int to create \"shadow-days\" when a month doesnt start on a sunday\r\n\t\tconst numOfPlaceholderDays = momentObj.clone().startOf('month').format('e');\r\n\t\tfor (let i = 1; i <= numOfPlaceholderDays; i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth key={`null ${i} of month`} placeHolder={true} />\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tfor (let i = 1; i <= daysInThisMonth; i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth\r\n\t\t\t\t\tkey={`Day ${i} of month`}\r\n\t\t\t\t\tplaceHolder={false}\r\n\t\t\t\t\tday={i}\r\n\t\t\t\t\t// Today is only true when it's today\r\n\t\t\t\t\ttoday={itIsToday(today, currentViewMonth, currentViewYear, i)}\r\n\t\t\t\t\tactive={itIsActive(currentViewDay, i)}\r\n\t\t\t\t\tcbFunc={dateClicked}\r\n\t\t\t\t\thasTodos={checkIfDayHasTodos(\r\n\t\t\t\t\t\tcurrentViewMonth,\r\n\t\t\t\t\t\tcurrentViewYear,\r\n\t\t\t\t\t\ti,\r\n\t\t\t\t\t\ttodos\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn components;\r\n\t};\r\n\treturn (\r\n\t\t<div className='calendar'>\r\n\t\t\t<div className='month-view'>\r\n\t\t\t\t<div className='month-navigator'>\r\n\t\t\t\t\t<button onClick={prevMonth}>Prev month</button>\r\n\t\t\t\t\t<h2 className='current-month'>\r\n\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t{momentObj.format('MMMM')} - {momentObj.format('YYYY')}\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<button onClick={nextMonth}>Next month</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<WeekDays />\r\n\t\t\t\t<div className='grid-container calender-days'>{renderDays()}</div>\r\n\t\t\t</div>\r\n\t\t\t<DayWithTodos\r\n\t\t\t\tdayToShow={momentObj}\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CalenderView;\r\n\r\nfunction checkIfDayHasTodos(\r\n\tcurrentViewMonth,\r\n\tcurrentViewYear,\r\n\tcurrentIterationDay,\r\n\ttodos\r\n) {\r\n\tconst formattedParam = formatDate(\r\n\t\tcurrentViewYear,\r\n\t\tcurrentViewMonth,\r\n\t\tcurrentIterationDay\r\n\t);\r\n\tconst compareDate = moment(formattedParam).format('YYYY-MM-DD');\r\n\r\n\tlet numOfDeadlinesOnThisDate = 0;\r\n\ttodos.forEach((todo) => {\r\n\t\tconst thisDayHasDeadlines = todo.deadline.split('T')[0] === compareDate;\r\n\t\tif (thisDayHasDeadlines) {\r\n\t\t\tnumOfDeadlinesOnThisDate++;\r\n\t\t}\r\n\t});\r\n\r\n\treturn numOfDeadlinesOnThisDate;\r\n}\r\n\r\nfunction itIsActive(currentViewDay, activeDayAsInt) {\r\n\treturn activeDayAsInt === currentViewDay;\r\n}\r\n\r\nfunction itIsToday(\r\n\tmomentObjToday,\r\n\tcurrentViewMonth,\r\n\tcurrentViewYear,\r\n\ttodayAsInt\r\n) {\r\n\t// Check if today is in the currentViewMonth\r\n\tconst todayDateAsInt = parseInt(momentObjToday.format('D'), 10);\r\n\tconst todayMonthAsInt = parseInt(momentObjToday.format('M'), 10);\r\n\tconst todayYearAsInt = parseInt(momentObjToday.format('YYYY'), 10);\r\n\r\n\tconst correctMonth = todayMonthAsInt === currentViewMonth;\r\n\tconst correctYear = todayYearAsInt === currentViewYear;\r\n\tconst correctDay = todayDateAsInt === todayAsInt;\r\n\r\n\treturn correctMonth && correctYear && correctDay;\r\n}\r\n\r\nfunction formatDate(year, month, day) {\r\n\t// If month.toString.length = 1\r\n\t// add leading 0\r\n\tlet monthAsString = month.toString();\r\n\tif (monthAsString.length === 1) monthAsString = '0' + monthAsString;\r\n\r\n\t// If day.toString.length = 1\r\n\t// add leading 0\r\n\tlet dayAsString = day.toString();\r\n\tif (dayAsString.length === 1) dayAsString = '0' + dayAsString;\r\n\r\n\tconst formatted = `${year}-${monthAsString}-${dayAsString}`;\r\n\treturn formatted;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport CalenderView from './Components/CalenderView/CalenderView';\r\nimport ListTodosView from './Components/ListTodosView/ListTodosView';\r\n\r\nfunction App() {\r\n\tconst [todos, setTodos] = useState(\r\n\t\tJSON.parse(localStorage.getItem('todos')) || []\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t}, [todos]);\r\n\r\n\tconst crudOperations = {\r\n\t\taddTodo: (todoObj) => {\r\n\t\t\tconst copyOfTodos = [...todos];\r\n\t\t\tcopyOfTodos.push(todoObj);\r\n\t\t\tsetTodos(copyOfTodos);\r\n\t\t},\r\n\t\tdeleteTodo: (id) => {\r\n\t\t\t// Make copy of todos\r\n\t\t\t// Filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\t// Replace old todos with copy\r\n\t\t\tsetTodos(copyOfTodos);\r\n\t\t},\r\n\t\ttoggleCompleteTodo: ({ id }) => {\r\n\t\t\t// Make copy of todos\r\n\t\t\t// Filter out the completed todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\t// Find relevant entry\r\n\t\t\tconst todoToBeUpdated = todos.find((todo) => todo.id === id);\r\n\r\n\t\t\t// Update key completed to opposite of inital value\r\n\t\t\ttodoToBeUpdated.completed = !todoToBeUpdated.completed;\r\n\r\n\t\t\t// Add new version of updated todo to todos\r\n\t\t\tcopyOfTodos.push(todoToBeUpdated);\r\n\r\n\t\t\t// Replace old todos with copy\r\n\t\t\tsetTodos(copyOfTodos);\r\n\t\t},\r\n\t\tupdateTodo: (updatedTodoObj) => {\r\n\t\t\t// Make copy of todos\r\n\t\t\t// Filter out the updated todo\r\n\t\t\tconst copyOfTodos = [...todos].filter(\r\n\t\t\t\t(todo) => todo.id !== updatedTodoObj.id\r\n\t\t\t);\r\n\r\n\t\t\t// Add new version of updated todo to todos\r\n\t\t\tcopyOfTodos.push(updatedTodoObj);\r\n\r\n\t\t\t// Replace old todos with copy\r\n\t\t\tsetTodos(copyOfTodos);\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<ListTodosView todos={todos} crudOperations={crudOperations} />\r\n\t\t\t<CalenderView todos={todos} crudOperations={crudOperations} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './reset.css';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}