{"version":3,"sources":["Components/CalenderView/DayOfMonth/DayOfMonth.js","Components/CalenderView/WeekDays/WeekDays.js","Components/TodoForm/TodoForm.js","Components/TodoView/TodoView.js","Components/ListTodosView/ListTodosView.js","Components/DayWithTodos/DayWithTodos.js","Components/CalenderView/CalenderView.js","App.js","index.js"],"names":["DayOfMonth","day","placeHolder","today","active","cbFunc","numOfTodos","dayValues","className","id","isHoliday","isFlagDay","onClick","innerText","generateNotches","WeekDays","divs","i","weekDay","moment","set","push","format","renderDivs","TodoForm","addTodo","updateTodo","dayToShow","updateMode","updateParams","setCurrentlyUpdating","useState","inputTitle","setInputTitle","inputDesc","setInputDesc","inputDate","setInputDate","inputDateValue","setInputDateValue","firstFocusInputElement","useRef","useEffect","toISOString","split","current","focus","title","description","onSubmit","evt","preventDefault","newTimeComponent","deadline","concat","uuidv4","type","value","onChange","target","required","autoFocus","ref","endOf","fromNow","dateComponent","datePlusTime","newDate","TodoView","todoObj","toggleCompleteTodo","deleteTodo","beginEdit","confirmDeleteVisible","setConfirmDeleteVisible","completed","ListTodosView","todos","crudOperations","insideDayWithTodos","hideDoneTodosByDefault","hiddenByDefault","currentlyUpdating","setUpdateParams","hideCompleted","toggleHideCompleted","handleTodoUpdate","sortedAndByDueDate","sort","compareByDates","filter","todo","setOfTodoDates","Set","add","setOfTodoDatesArr","Array","from","filteredTodosByDate","date","checked","map","returnArr","dateWithTodos","mapReturnArray","a","b","aDate","bDate","isBefore","DayWithTodos","todosForThisDay","isSame","namnsdag","length","join","CalenderView","momentObj","setMomentObject","toString","currentTime","setCurrentTime","clone","currentYear","setCurrentYear","loadingState","setLoadingState","localStorage","getItem","setItem","fetch","then","res","json","data","JSON","stringify","dagar","fetchData","dateClicked","clickedDate","textContent","parseInt","parentNode","newMomentObj","subtract","components","numOfPlaceholderDays","startOf","daysInMonth","itIsToday","itIsActive","getNumOfTodosDueThisDay","getDayObject","renderDays","compareDate","todosDueThisDay","incompleteTodosDueThisDay","activeDayAsInt","todayObj","todayAsInt","todayFormattedDate","todayFormattedMonth","todayFormattedYear","momentObjFormattedMonth","momentObjFormattedYear","dayAsInt","yearNum","monthNum","datehNum","dayInArray","parse","find","datum","App","setTodos","customHookSetTodos","todoToBeUpdated","updatedTodoObj","array","hookCallback","object","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c28375db.chunk.js","sourcesContent":["function DayOfMonth({\r\n\tday,\r\n\tplaceHolder,\r\n\ttoday,\r\n\tactive,\r\n\tcbFunc,\r\n\tnumOfTodos,\r\n\tdayValues,\r\n}) {\r\n\tconst generateNotches = () => {\r\n\t\tlet innerText;\r\n\t\tif (numOfTodos[0] > 0) {\r\n\t\t\tif (numOfTodos[1] > 0) {\r\n\t\t\t\tinnerText = `${numOfTodos[1]} todo${numOfTodos[1] > 1 ? 's' : ''} due!`;\r\n\t\t\t} else {\r\n\t\t\t\tinnerText = 'All todos done!';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn innerText;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{placeHolder ? (\r\n\t\t\t\t<div className='placeholder grid-child'></div>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tid={day + '|day of this month'}\r\n\t\t\t\t\tclassName={`\r\n\t\t\t\t\t\tday-div\r\n\t\t\t\t\t\tgrid-child\r\n\t\t\t\t\t\t${active ? 'active-day' : ''}\r\n\t\t\t\t\t\t${numOfTodos[0] > 0 ? 'has-todos' : ''}\r\n\t\t\t\t\t\t${numOfTodos[0] > 0 && numOfTodos[1] === 0 ? 'all-todos-done' : ''}\r\n\t\t\t\t\t\t${today ? 'today' : ''}\r\n\t\t\t\t\t\t${isHoliday(dayValues) ? 'is-holiday' : ''}\r\n\t\t\t\t\t\t${isFlagDay(dayValues) ? 'is-flag-day' : ''}\r\n\t\t\t\t\t`}\r\n\t\t\t\t\tonClick={cbFunc}\r\n\t\t\t\t>\r\n\t\t\t\t\t{numOfTodos ? (\r\n\t\t\t\t\t\t<div className='notch-container'>{generateNotches()}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<> </>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='date-num'>{day}</div>\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DayOfMonth;\r\n\r\nfunction isHoliday(dayValues) {\r\n\tif (dayValues) {\r\n\t\treturn dayValues['röd dag'] === 'Ja' || dayValues['arbetsfri dag'] === 'Ja';\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction isFlagDay(dayValues) {\r\n\tif (dayValues) {\r\n\t\treturn dayValues['flaggdag'] !== '';\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import moment from 'moment';\r\nfunction WeekDays() {\r\n\tconst renderDivs = () => {\r\n\t\tconst divs = [];\r\n\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\t\t\tconst weekDay = moment();\r\n\t\t\tweekDay.set('day', i);\r\n\t\t\tdivs.push(\r\n\t\t\t\t<div className='week-day-label' key={weekDay.format('dddd')}>\r\n\t\t\t\t\t{weekDay.format('dddd')}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn divs;\r\n\t};\r\n\treturn <div className='grid-container week-days'>{renderDivs()}</div>;\r\n}\r\n\r\nexport default WeekDays;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm({\r\n\taddTodo,\r\n\tupdateTodo,\r\n\tdayToShow,\r\n\tupdateMode,\r\n\tupdateParams,\r\n\tsetCurrentlyUpdating,\r\n}) {\r\n\tconst [inputTitle, setInputTitle] = useState('');\r\n\tconst [inputDesc, setInputDesc] = useState('');\r\n\tconst [inputDate, setInputDate] = useState(dayToShow);\r\n\tconst [inputDateValue, setInputDateValue] = useState('');\r\n\r\n\tconst firstFocusInputElement = useRef(null);\r\n\r\n\t// inputDate and inputDateValue should update when the form is mounted\r\n\t// and when dayToShow is updated\r\n\r\n\t// dayToShow needs to be anything other than an object\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dayToShow) {\r\n\t\t\tsetInputDate(dayToShow);\r\n\t\t\tsetInputDateValue(dayToShow.toISOString().split('T')[0]);\r\n\t\t}\r\n\t}, [dayToShow]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Makes sure title input is in focus even when initiating an update\r\n\t\tfirstFocusInputElement.current.focus();\r\n\r\n\t\tif (updateParams) {\r\n\t\t\tsetInputTitle(updateParams.title);\r\n\t\t\tsetInputDesc(updateParams.description);\r\n\t\t}\r\n\t}, [updateMode, updateParams]);\r\n\r\n\tconst handleSubmit = (evt) => {\r\n\t\tevt.preventDefault();\r\n\r\n\t\t// Get current timestamp\r\n\t\tconst newTimeComponent = moment().toISOString().split('T')[1];\r\n\r\n\t\tif (updateMode) {\r\n\t\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\t\t// Send new updateObj to App.js\r\n\t\t\tupdateTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate\r\n\t\t\t\t\t.toISOString()\r\n\t\t\t\t\t.split('T')[0]\r\n\t\t\t\t\t.concat('T', newTimeComponent),\r\n\t\t\t\tid: updateParams.id,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\taddTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate\r\n\t\t\t\t\t.toISOString()\r\n\t\t\t\t\t.split('T')[0]\r\n\t\t\t\t\t.concat('T', newTimeComponent),\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\r\n\t\t// Focus on Title\r\n\t\tfirstFocusInputElement.current.focus();\r\n\t};\r\n\r\n\tconst handleTitleChange = ({ target }) => {\r\n\t\tsetInputTitle(target.value);\r\n\t};\r\n\r\n\tconst handleDescriptionChange = ({ target }) => {\r\n\t\tsetInputDesc(target.value);\r\n\t};\r\n\r\n\tconst handleDateChange = ({ target }) => {\r\n\t\tlet dateComponent = target.value;\r\n\r\n\t\tlet timeComponent = moment(inputDate).toISOString().split('T')[1];\r\n\r\n\t\tlet datePlusTime = dateComponent + 'T' + timeComponent;\r\n\r\n\t\tlet newDate = moment(datePlusTime);\r\n\r\n\t\tsetInputDate(newDate);\r\n\t\tsetInputDateValue(dateComponent);\r\n\t};\r\n\tconst cancelUpdate = () => {\r\n\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(moment());\r\n\t\tsetInputDateValue(moment().toISOString().split('T')[0]);\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<label>\r\n\t\t\t\tTitle\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={inputTitle}\r\n\t\t\t\t\tonChange={handleTitleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tref={firstFocusInputElement}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tAdditional info\r\n\t\t\t\t<textarea value={inputDesc} onChange={handleDescriptionChange} />\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tDeadline: <b>{inputDate.endOf('days').fromNow()}</b>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='date'\r\n\t\t\t\t\tvalue={inputDateValue}\r\n\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<div className='submit-btn-div'>\r\n\t\t\t\t<button type='submit'>\r\n\t\t\t\t\t{updateMode ? 'Update todo' : 'Add new Todo'}\r\n\t\t\t\t</button>\r\n\t\t\t\t{updateMode && (\r\n\t\t\t\t\t<button type='button' onClick={cancelUpdate}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default TodoForm;\r\n","import { useState } from 'react';\r\n\r\nimport './TodoView.css';\r\n\r\nfunction TodoView({ todoObj, toggleCompleteTodo, deleteTodo, beginEdit }) {\r\n\tconst [confirmDeleteVisible, setConfirmDeleteVisible] = useState(false);\r\n\r\n\tconst handleCompleteTodo = () => {\r\n\t\ttoggleCompleteTodo(todoObj);\r\n\t};\r\n\r\n\tconst handleUpdateTodo = () => {\r\n\t\tbeginEdit(todoObj);\r\n\t};\r\n\r\n\tconst handleDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(true);\r\n\t};\r\n\r\n\tconst cancelConfirmDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\tconst confirmDeleteTodo = () => {\r\n\t\tdeleteTodo(todoObj.id);\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`\r\n\t\t\ttodo-view\r\n\t\t\t${todoObj.completed ? 'todo-completed' : ''}\r\n\t\t`}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>{todoObj.title}</h4>\r\n\t\t\t\t{todoObj.description ? <p>{todoObj.description}</p> : <></>}\r\n\t\t\t</div>\r\n\t\t\t<div className='todo-btns'>\r\n\t\t\t\t{confirmDeleteVisible ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={confirmDeleteTodo}>Confirm delete</button>\r\n\t\t\t\t\t\t<button onClick={cancelConfirmDeleteTodo}>Cancel delete</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={handleDeleteTodo}>Delete</button>\r\n\t\t\t\t\t\t<button onClick={handleUpdateTodo}>Update</button>\r\n\t\t\t\t\t\t<button onClick={handleCompleteTodo}>\r\n\t\t\t\t\t\t\t{todoObj.completed ? 'Unmark as complete' : 'Mark as complete'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default TodoView;\r\n","import { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './ListTodosView.css';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport TodoView from '../TodoView/TodoView';\r\n\r\nfunction ListTodosView({\r\n\ttodos,\r\n\tcrudOperations,\r\n\tinsideDayWithTodos,\r\n\tdayToShow,\r\n\thiddenByDefault: hideDoneTodosByDefault,\r\n}) {\r\n\tconst [currentlyUpdating, setCurrentlyUpdating] = useState(false);\r\n\tconst [updateParams, setUpdateParams] = useState({});\r\n\r\n\tconst [hideCompleted, toggleHideCompleted] = useState(hideDoneTodosByDefault);\r\n\r\n\tconst handleTodoUpdate = (todoObj) => {\r\n\t\tsetCurrentlyUpdating(true);\r\n\t\tsetUpdateParams(todoObj);\r\n\t};\r\n\r\n\tlet sortedAndByDueDate = [...todos.sort(compareByDates)];\r\n\tif (hideCompleted) {\r\n\t\tsortedAndByDueDate = [\r\n\t\t\t...sortedAndByDueDate.filter((todo) => !todo.completed),\r\n\t\t];\r\n\t}\r\n\r\n\tconst setOfTodoDates = new Set();\r\n\tfor (const todo of sortedAndByDueDate) {\r\n\t\tsetOfTodoDates.add(todo.deadline.split('T')[0]);\r\n\t}\r\n\tconst setOfTodoDatesArr = Array.from(setOfTodoDates);\r\n\r\n\tconst filteredTodosByDate = [];\r\n\tfor (const date of setOfTodoDatesArr) {\r\n\t\tfilteredTodosByDate.push(\r\n\t\t\tsortedAndByDueDate.filter((todo) => todo.deadline.split('T')[0] === date)\r\n\t\t);\r\n\t}\r\n\r\n\tconst mapReturnArray = () => {\r\n\t\tconst returnArr = [];\r\n\r\n\t\tfor (const dateWithTodos of filteredTodosByDate) {\r\n\t\t\treturnArr.push(\r\n\t\t\t\t<div key={dateWithTodos[0].deadline.split('T')[0]}>\r\n\t\t\t\t\t{!insideDayWithTodos ? (\r\n\t\t\t\t\t\t<h2 className='todos-date-header'>\r\n\t\t\t\t\t\t\t{dateWithTodos[0].deadline.split('T')[0]}\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{dateWithTodos.map((todo) => (\r\n\t\t\t\t\t\t<TodoView\r\n\t\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\t\ttodoObj={todo}\r\n\t\t\t\t\t\t\ttoggleCompleteTodo={crudOperations.toggleCompleteTodo}\r\n\t\t\t\t\t\t\tdeleteTodo={crudOperations.deleteTodo}\r\n\t\t\t\t\t\t\tbeginEdit={handleTodoUpdate}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn returnArr;\r\n\t};\r\n\r\n\treturn currentlyUpdating ? (\r\n\t\t<TodoForm\r\n\t\t\taddTodo={crudOperations.addTodo}\r\n\t\t\tupdateTodo={crudOperations.updateTodo}\r\n\t\t\tupdateParams={updateParams}\r\n\t\t\tupdateMode={true}\r\n\t\t\tsetCurrentlyUpdating={setCurrentlyUpdating}\r\n\t\t\tdayToShow={moment(updateParams.deadline)}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div\r\n\t\t\tclassName={`\r\n\t\t\t${insideDayWithTodos ? 'day-w-todos-grid' : ''}\r\n\t\t`}\r\n\t\t>\r\n\t\t\t{insideDayWithTodos ? (\r\n\t\t\t\t<TodoForm addTodo={crudOperations.addTodo} dayToShow={dayToShow} />\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\r\n\t\t\t<div\r\n\t\t\t\tclassName={`${\r\n\t\t\t\t\tinsideDayWithTodos\r\n\t\t\t\t\t\t? 'list-todos-component-inside-day-with-todos'\r\n\t\t\t\t\t\t: 'list-todos-component'\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tHide completed\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tchecked={hideCompleted}\r\n\t\t\t\t\t\tonClick={() => toggleHideCompleted(!hideCompleted)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`\r\n\t\t\tall-todos-listed\r\n\t\t\t${insideDayWithTodos ? 'inside-day-with-todos' : ''}\r\n\t\t\t`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{insideDayWithTodos\r\n\t\t\t\t\t\t? filteredTodosByDate[0]?.map((todo) => (\r\n\t\t\t\t\t\t\t\t<TodoView\r\n\t\t\t\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\t\t\t\ttodoObj={todo}\r\n\t\t\t\t\t\t\t\t\ttoggleCompleteTodo={crudOperations.toggleCompleteTodo}\r\n\t\t\t\t\t\t\t\t\tdeleteTodo={crudOperations.deleteTodo}\r\n\t\t\t\t\t\t\t\t\tbeginEdit={handleTodoUpdate}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t: mapReturnArray()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListTodosView;\r\n\r\nfunction compareByDates(a, b) {\r\n\tconst aDate = moment(a.deadline);\r\n\tconst bDate = moment(b.deadline);\r\n\r\n\tlet returnValue;\r\n\taDate.isBefore(bDate)\r\n\t\t? (returnValue = -1)\r\n\t\t: bDate.isBefore(aDate)\r\n\t\t? (returnValue = 1)\r\n\t\t: (returnValue = 0);\r\n\r\n\treturn returnValue;\r\n}\r\n","import './DayWithTodos.css';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport ListTodosView from '../ListTodosView/ListTodosView';\r\n\r\nfunction DayWithTodos({ dayToShow, todos, crudOperations, dayValues }) {\r\n\tconst todosForThisDay = todos.filter((todo) =>\r\n\t\tdayToShow.isSame(todo.deadline, 'date')\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className='day-with-todos'>\r\n\t\t\t<p>{dayToShow.format('D [of] MMMM, YYYY')}</p>\r\n\r\n\t\t\t{dayValues.namnsdag.length ? (\r\n\t\t\t\t<p>\r\n\t\t\t\t\tIdag har <u>{dayValues.namnsdag.join(' och ')}</u> namnsdag!\r\n\t\t\t\t</p>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t\t{dayValues['flaggdag'] !== '' ? (\r\n\t\t\t\t<p>\r\n\t\t\t\t\tHissa flaggan för idag är det: <u>{dayValues['flaggdag']}</u>\r\n\t\t\t\t</p>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t\t<div className='grid-day-with-todos'>\r\n\t\t\t\t{todosForThisDay.length > 0 ? (\r\n\t\t\t\t\t<ListTodosView\r\n\t\t\t\t\t\ttodos={todosForThisDay}\r\n\t\t\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t\t\t\tinsideDayWithTodos={true}\r\n\t\t\t\t\t\tdayToShow={dayToShow}\r\n\t\t\t\t\t\thideDoneTodosByDefault={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='day-w-out-todos'>\r\n\t\t\t\t\t\t<TodoForm addTodo={crudOperations.addTodo} dayToShow={dayToShow} />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<i>No todos due this day...</i>{' '}\r\n\t\t\t\t\t\t\t<p>Use the form to add a new todo on this day!</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DayWithTodos;\r\n","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport DayOfMonth from './DayOfMonth/DayOfMonth';\r\n\r\nimport './CalenderView.css';\r\nimport WeekDays from './WeekDays/WeekDays';\r\nimport DayWithTodos from '../DayWithTodos/DayWithTodos';\r\n\r\nfunction CalenderView({ todos, crudOperations }) {\r\n\tconst [momentObj, setMomentObject] = useState(() => moment());\r\n\r\n\t// Today should only change when the user manually refreshes the page\r\n\tconst [today, setToday] = useState(moment());\r\n\tconst [currentTime, setCurrentTime] = useState(\r\n\t\ttoday.toString().split(' ')[4]\r\n\t);\r\n\r\n\tconst [currentYear, setCurrentYear] = useState(\r\n\t\tmomentObj.clone().format('YYYY')\r\n\t);\r\n\r\n\tconst [loadingState, setLoadingState] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\t// Only update state if the calendar shows a new year\r\n\t\t\tif (currentYear !== momentObj.clone().format('YYYY')) {\r\n\t\t\t\tsetCurrentYear(momentObj.clone().format('YYYY'));\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure to only fetch from the API once a year\r\n\t\t\tif (!localStorage.getItem(`year-${currentYear}`)) {\r\n\t\t\t\t// Add the current year to LS to prevent multiple fetches for the same year\r\n\t\t\t\tlocalStorage.setItem(`year-${currentYear}`, currentYear);\r\n\r\n\t\t\t\tawait fetch(`http://sholiday.faboul.se/dagar/v2.1/${currentYear}`)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\treturn res.json();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(async (data) => {\r\n\t\t\t\t\t\t// Add the fetched holidays to LS\r\n\t\t\t\t\t\tawait localStorage.setItem(\r\n\t\t\t\t\t\t\t`year-${currentYear}-holidays`,\r\n\t\t\t\t\t\t\tJSON.stringify(data.dagar)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tsetLoadingState(false);\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetLoadingState(false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, [currentYear, momentObj]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrentTime(momentObj.toString().split(' ')[4]);\r\n\t}, [momentObj]);\r\n\r\n\tconst prevMonth = () => {\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.subtract(1, 'M')\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tsetMomentObject(newMomentObj);\r\n\t};\r\n\r\n\tconst nextMonth = () => {\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.add(1, 'M')\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tsetMomentObject(newMomentObj);\r\n\t};\r\n\r\n\tconst dateClicked = ({ target }) => {\r\n\t\tlet clickedDate;\r\n\t\tif (target.textContent === '|') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.parentNode.id.split('|')[0]);\r\n\t\t} else if (target.id === '') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.id.split('|')[0]);\r\n\t\t} else {\r\n\t\t\tclickedDate = parseInt(target.id.split('|')[0]);\r\n\t\t}\r\n\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.date(clickedDate)\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tsetMomentObject(newMomentObj);\r\n\t};\r\n\r\n\tconst renderDays = () => {\r\n\t\tconst components = [];\r\n\r\n\t\t// Get weekday of first of month as int to create \"shadow-days\" when a month doesnt start on a sunday\r\n\t\tconst numOfPlaceholderDays = momentObj.clone().startOf('month').format('e');\r\n\t\tfor (let i = 1; i <= numOfPlaceholderDays; i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth key={`null ${i} of month`} placeHolder={true} />\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tfor (let i = 1; i <= momentObj.daysInMonth(); i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth\r\n\t\t\t\t\tkey={`Day ${i} of month`}\r\n\t\t\t\t\tplaceHolder={false}\r\n\t\t\t\t\tday={i}\r\n\t\t\t\t\t// Today is only true when it's today\r\n\t\t\t\t\ttoday={itIsToday(today, momentObj, i)}\r\n\t\t\t\t\tactive={itIsActive(momentObj, i)}\r\n\t\t\t\t\tcbFunc={dateClicked}\r\n\t\t\t\t\tnumOfTodos={getNumOfTodosDueThisDay(momentObj, todos, i)}\r\n\t\t\t\t\tdayValues={getDayObject(momentObj, i)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn components;\r\n\t};\r\n\treturn (\r\n\t\t<div className='calendar'>\r\n\t\t\t<div className='month-view'>\r\n\t\t\t\t<div className='month-navigator'>\r\n\t\t\t\t\t<button onClick={prevMonth}>Prev month</button>\r\n\t\t\t\t\t<h2 className='current-month'>\r\n\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t{momentObj.format('MMMM')} - {momentObj.format('YYYY')}\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<button onClick={nextMonth}>Next month</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<WeekDays />\r\n\t\t\t\t<div className='grid-container calender-days'>{renderDays()}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{loadingState === false ? (\r\n\t\t\t\t<DayWithTodos\r\n\t\t\t\t\tdayToShow={momentObj}\r\n\t\t\t\t\ttodos={todos}\r\n\t\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t\t\tdayValues={getDayObject(momentObj, 0)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<p>Loading...</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CalenderView;\r\n\r\nfunction getNumOfTodosDueThisDay(momentObj, todos, i) {\r\n\tconst compareDate = momentObj.clone().set('date', i).format('YYYY-MM-DD');\r\n\r\n\t// Get totalnumber of todos for this day\r\n\tconst todosDueThisDay = todos.filter(\r\n\t\t(todo) => todo.deadline.split('T')[0] === compareDate\r\n\t);\r\n\r\n\t// Get number of incomplete todos for this day\r\n\tconst incompleteTodosDueThisDay = todosDueThisDay.filter(\r\n\t\t(todo) => !todo.completed\r\n\t);\r\n\r\n\tconst totalNum = todosDueThisDay.length;\r\n\tconst incompleteNum = incompleteTodosDueThisDay.length;\r\n\treturn [totalNum, incompleteNum];\r\n}\r\n\r\nfunction itIsActive(momentObj, activeDayAsInt) {\r\n\tconst activeDayFormatted = parseInt(momentObj.clone().format('D'), 10);\r\n\treturn activeDayFormatted === activeDayAsInt;\r\n}\r\n\r\nfunction itIsToday(todayObj, momentObj, todayAsInt) {\r\n\tconst todayFormattedDate = parseInt(todayObj.clone().format('D'), 10);\r\n\tconst todayFormattedMonth = parseInt(todayObj.clone().format('MM'), 10);\r\n\tconst todayFormattedYear = parseInt(todayObj.clone().format('YYYY'), 10);\r\n\r\n\tconst momentObjFormattedMonth = parseInt(momentObj.clone().format('MM'), 10);\r\n\tconst momentObjFormattedYear = parseInt(momentObj.clone().format('YYYY'), 10);\r\n\r\n\treturn (\r\n\t\ttodayFormattedDate === todayAsInt &&\r\n\t\ttodayFormattedMonth === momentObjFormattedMonth &&\r\n\t\ttodayFormattedYear === momentObjFormattedYear\r\n\t);\r\n}\r\n\r\nfunction getDayObject(momentObj, dayAsInt) {\r\n\tlet yearNum;\r\n\tlet monthNum;\r\n\tlet datehNum;\r\n\tif (dayAsInt > 0) {\r\n\t\tyearNum = momentObj.clone().format('YYYY').toString();\r\n\t\tmonthNum = momentObj.clone().format('MM').toString();\r\n\t\tdatehNum = momentObj.clone().set('date', dayAsInt).format('DD').toString();\r\n\t} else {\r\n\t\tyearNum = momentObj.clone().format('YYYY').toString();\r\n\t\tmonthNum = momentObj.clone().format('MM').toString();\r\n\t\tdatehNum = momentObj.clone().format('DD').toString();\r\n\t}\r\n\r\n\tlet dayInArray;\r\n\tif (localStorage.getItem(`year-${yearNum}-holidays`)) {\r\n\t\tdayInArray = JSON.parse(\r\n\t\t\tlocalStorage.getItem(`year-${yearNum}-holidays`)\r\n\t\t).find((day) => day.datum === `${yearNum}-${monthNum}-${datehNum}`);\r\n\t}\r\n\r\n\treturn dayInArray;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport CalenderView from './Components/CalenderView/CalenderView';\r\nimport ListTodosView from './Components/ListTodosView/ListTodosView';\r\n\r\nfunction App() {\r\n\t// Todos is parsed from localStorage\r\n\t// or declared as an empty array\r\n\tconst [todos, setTodos] = useState(\r\n\t\tJSON.parse(localStorage.getItem('todos')) || []\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t}, [todos]);\r\n\r\n\tconst crudOperations = {\r\n\t\taddTodo: (todoObj) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\tconst copyOfTodos = [...todos];\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, todoObj);\r\n\t\t},\r\n\t\tdeleteTodo: (id) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\t// Replace todos with copyOfTodos\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos);\r\n\t\t},\r\n\t\ttoggleCompleteTodo: ({ id }) => {\r\n\t\t\t// Find relevant entry from saved todos\r\n\t\t\tconst todoToBeUpdated = todos.find((todo) => todo.id === id);\r\n\r\n\t\t\t// Update completed-property to opposite of its inital value\r\n\t\t\ttodoToBeUpdated.completed = !todoToBeUpdated.completed;\r\n\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, todoToBeUpdated);\r\n\t\t},\r\n\t\tupdateTodo: (updatedTodoObj) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter(\r\n\t\t\t\t(todo) => todo.id !== updatedTodoObj.id\r\n\t\t\t);\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, updatedTodoObj);\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<ListTodosView\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t\thideDoneTodosByDefault={false}\r\n\t\t\t/>\r\n\t\t\t<CalenderView todos={todos} crudOperations={crudOperations} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\nfunction customHookSetTodos(array, hookCallback, object) {\r\n\t// Add new version of object to array\r\n\t// unless object is missing\r\n\tif (object) array.push(object);\r\n\r\n\t// Replace todos with copyOfTodos\r\n\thookCallback(array);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './reset.css';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}