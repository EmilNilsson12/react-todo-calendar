{"version":3,"sources":["Components/CalenderView/DayOfMonth/DayOfMonth.js","Components/CalenderView/WeekDays/WeekDays.js","Components/TodoForm/TodoForm.js","Components/TodoView/TodoView.js","Components/ListTodosView/ListTodosView.js","Components/DayWithTodos/DayWithTodos.js","Components/CalenderView/CalenderView.js","App.js","index.js"],"names":["DayOfMonth","day","placeHolder","today","active","cbFunc","numOfTodos","className","id","onClick","WeekDays","divs","i","weekDay","moment","set","push","format","renderDivs","TodoForm","addTodo","updateTodo","dayToShow","updateMode","updateParams","setCurrentlyUpdating","useState","inputTitle","setInputTitle","inputDesc","setInputDesc","inputDate","setInputDate","toISOString","split","inputDateValue","setInputDateValue","dayToShowState","setDayToShowState","firstFocusInputElement","useRef","useEffect","current","focus","title","description","onSubmit","evt","preventDefault","newTimeComponent","deadline","concat","uuidv4","type","value","onChange","target","required","autoFocus","ref","endOf","fromNow","dateComponent","datePlusTime","newDate","TodoView","todoObj","toggleCompleteTodo","deleteTodo","beginEdit","confirmDeleteVisible","setConfirmDeleteVisible","completed","dateAdded","ListTodosView","todos","crudOperations","insideDayWithTodos","showingText","currentlyUpdating","setUpdateParams","showIncompleteOnly","toggleShowIncompleteOnly","handleTodoUpdate","sortedByDueDate","sort","compareByDates","filter","todo","map","momentObjFromTodo","a","b","aDate","bDate","isBefore","DayWithTodos","todosForThisDay","isSame","length","CalenderView","momentObj","setMomentObject","toString","currentTime","setCurrentTime","dateClicked","clickedDate","textContent","parseInt","parentNode","clone","date","newMomentObj","subtract","add","components","numOfPlaceholderDays","startOf","daysInMonth","itIsToday","itIsActive","getNumOfTodosDueThisDay","renderDays","compareDate","activeDayAsInt","todayObj","todayAsInt","App","JSON","parse","localStorage","getItem","setTodos","setItem","stringify","customHookSetTodos","todoToBeUpdated","find","updatedTodoObj","array","hookCallback","object","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a89b14f4.chunk.js","sourcesContent":["function DayOfMonth({ day, placeHolder, today, active, cbFunc, numOfTodos }) {\r\n\tconst generateNotches = () => {\r\n\t\tlet innerText = `This day has ${numOfTodos} todo${\r\n\t\t\tnumOfTodos > 1 ? 's' : ''\r\n\t\t}`;\r\n\t\treturn innerText;\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{placeHolder ? (\r\n\t\t\t\t<div className='placeholder grid-child'></div>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tid={day + '|day of this month'}\r\n\t\t\t\t\tclassName={`\r\n\t\t\t\t\t\t${today ? 'today' : ''}\r\n\t\t\t\t\t\t${active ? 'active-day' : ''}\r\n\t\t\t\t\t\t${numOfTodos ? 'has-todos' : ''}\r\n\t\t\t\t\t\tday-div\r\n\t\t\t\t\t\tgrid-child\r\n\t\t\t\t\t`}\r\n\t\t\t\t\tonClick={cbFunc}\r\n\t\t\t\t>\r\n\t\t\t\t\t{numOfTodos ? (\r\n\t\t\t\t\t\t<div className='notch-container'>{generateNotches()}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<> </>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='date-num'>{day}</div>\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DayOfMonth;\r\n","import moment from 'moment';\r\nfunction WeekDays() {\r\n\tconst renderDivs = () => {\r\n\t\tconst divs = [];\r\n\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\t\t\tconst weekDay = moment();\r\n\t\t\tweekDay.set('day', i);\r\n\t\t\tdivs.push(\r\n\t\t\t\t<div className='week-day-label' key={weekDay.format('dddd')}>\r\n\t\t\t\t\t{weekDay.format('dddd')}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn divs;\r\n\t};\r\n\treturn <div className='grid-container week-days'>{renderDivs()}</div>;\r\n}\r\n\r\nexport default WeekDays;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm({\r\n\taddTodo,\r\n\tupdateTodo,\r\n\tdayToShow,\r\n\tupdateMode,\r\n\tupdateParams,\r\n\tsetCurrentlyUpdating,\r\n}) {\r\n\tconst [inputTitle, setInputTitle] = useState('');\r\n\tconst [inputDesc, setInputDesc] = useState('');\r\n\tconst [inputDate, setInputDate] = useState(moment());\r\n\tconst [inputDateValue, setInputDateValue] = useState(\r\n\t\tmoment().toISOString().split('T')[0]\r\n\t);\r\n\r\n\tconst [dayToShowState, setDayToShowState] = useState(dayToShow);\r\n\r\n\tconst firstFocusInputElement = useRef(null);\r\n\r\n\t// inputDate and inputDateValue should update when the form is mounted\r\n\t// and when dayToShow is updated\r\n\r\n\t// dayToShow needs to be anything other than an object\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dayToShow) {\r\n\t\t\tsetInputDate(dayToShow);\r\n\t\t\tsetInputDateValue(dayToShow.toISOString().split('T')[0]);\r\n\t\t}\r\n\t\tsetDayToShowState(dayToShowState);\r\n\t}, [dayToShow]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Makes sure title input is in focus even when initiating an update\r\n\t\tfirstFocusInputElement.current.focus();\r\n\r\n\t\tif (updateParams) {\r\n\t\t\tsetInputTitle(updateParams.title);\r\n\t\t\tsetInputDesc(updateParams.description);\r\n\t\t\t// setInputDate(moment(updateParams.deadline));\r\n\t\t\t// setInputDateValue(updateParams.deadline.split('T')[0]);\r\n\t\t}\r\n\t}, [updateMode]);\r\n\r\n\tconst handleSubmit = (evt) => {\r\n\t\tevt.preventDefault();\r\n\r\n\t\t// Get current timestamp\r\n\t\tconst newTimeComponent = moment().toISOString().split('T')[1];\r\n\r\n\t\tif (updateMode) {\r\n\t\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\t\t// Send new updateObj to App.js\r\n\t\t\tupdateTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate\r\n\t\t\t\t\t.toISOString()\r\n\t\t\t\t\t.split('T')[0]\r\n\t\t\t\t\t.concat('T', newTimeComponent),\r\n\t\t\t\tid: updateParams.id,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\taddTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate\r\n\t\t\t\t\t.toISOString()\r\n\t\t\t\t\t.split('T')[0]\r\n\t\t\t\t\t.concat('T', newTimeComponent),\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(moment());\r\n\t\tsetInputDateValue(moment().toISOString().split('T')[0]);\r\n\r\n\t\t// Focus on Title\r\n\t\tfirstFocusInputElement.current.focus();\r\n\t};\r\n\r\n\tconst handleTitleChange = ({ target }) => {\r\n\t\tsetInputTitle(target.value);\r\n\t};\r\n\r\n\tconst handleDescriptionChange = ({ target }) => {\r\n\t\tsetInputDesc(target.value);\r\n\t};\r\n\r\n\tconst handleDateChange = ({ target }) => {\r\n\t\tlet dateComponent = target.value;\r\n\r\n\t\tlet timeComponent = moment(inputDate).toISOString().split('T')[1];\r\n\r\n\t\tlet datePlusTime = dateComponent + 'T' + timeComponent;\r\n\r\n\t\tlet newDate = moment(datePlusTime);\r\n\r\n\t\tsetInputDate(newDate);\r\n\t\tsetInputDateValue(dateComponent);\r\n\t};\r\n\tconst cancelUpdate = () => {\r\n\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(moment());\r\n\t\tsetInputDateValue(moment().toISOString().split('T')[0]);\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<label>\r\n\t\t\t\tTitle\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={inputTitle}\r\n\t\t\t\t\tonChange={handleTitleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tref={firstFocusInputElement}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tAdditional info\r\n\t\t\t\t<textarea value={inputDesc} onChange={handleDescriptionChange} />\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tDeadline: <b>{inputDate.endOf('days').fromNow()}</b>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='date'\r\n\t\t\t\t\tvalue={inputDateValue}\r\n\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<div className='submit-btn-div'>\r\n\t\t\t\t<button type='submit'>\r\n\t\t\t\t\t{updateMode ? 'Update todo' : 'Add new Todo'}\r\n\t\t\t\t</button>\r\n\t\t\t\t{updateMode && (\r\n\t\t\t\t\t<button type='button' onClick={cancelUpdate}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default TodoForm;\r\n","import { useState } from 'react';\r\n\r\nimport './TodoView.css';\r\n\r\nfunction TodoView({ todoObj, toggleCompleteTodo, deleteTodo, beginEdit }) {\r\n\tconst [confirmDeleteVisible, setConfirmDeleteVisible] = useState(false);\r\n\r\n\tconst handleCompleteTodo = () => {\r\n\t\ttoggleCompleteTodo(todoObj);\r\n\t};\r\n\r\n\tconst handleUpdateTodo = () => {\r\n\t\tbeginEdit(todoObj);\r\n\t};\r\n\r\n\tconst handleDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(true);\r\n\t};\r\n\r\n\tconst cancelConfirmDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\tconst confirmDeleteTodo = () => {\r\n\t\tdeleteTodo(todoObj.id);\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`\r\n\t\t\ttodo-view\r\n\t\t\t${todoObj.completed ? 'todo-completed' : ''}\r\n\t\t`}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>{todoObj.title}</h4>\r\n\t\t\t\t<p>{todoObj.description}</p>\r\n\t\t\t\t<span>{todoObj.dateAdded}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className='todo-btns'>\r\n\t\t\t\t{confirmDeleteVisible ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={confirmDeleteTodo}>Confirm delete</button>\r\n\t\t\t\t\t\t<button onClick={cancelConfirmDeleteTodo}>Cancel delete</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={handleDeleteTodo}>Delete</button>\r\n\t\t\t\t\t\t<button onClick={handleUpdateTodo}>Update</button>\r\n\t\t\t\t\t\t<button onClick={handleCompleteTodo}>\r\n\t\t\t\t\t\t\t{todoObj.completed ? 'Unmark as complete' : 'Mark as complete'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default TodoView;\r\n","import { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './ListTodosView.css';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport TodoView from '../TodoView/TodoView';\r\n\r\nfunction ListTodosView({\r\n\ttodos,\r\n\tcrudOperations,\r\n\tinsideDayWithTodos,\r\n\tshowingText,\r\n\tdayToShow,\r\n}) {\r\n\tconst [currentlyUpdating, setCurrentlyUpdating] = useState(false);\r\n\tconst [updateParams, setUpdateParams] = useState({});\r\n\r\n\tconst [showIncompleteOnly, toggleShowIncompleteOnly] = useState(false);\r\n\r\n\tconst handleTodoUpdate = (todoObj) => {\r\n\t\tsetCurrentlyUpdating(true);\r\n\t\tsetUpdateParams(todoObj);\r\n\t};\r\n\r\n\tlet sortedByDueDate = [...todos.sort(compareByDates)];\r\n\tif (showIncompleteOnly)\r\n\t\tsortedByDueDate = [...sortedByDueDate.filter((todo) => !todo.completed)];\r\n\treturn currentlyUpdating ? (\r\n\t\t<TodoForm\r\n\t\t\taddTodo={crudOperations.addTodo}\r\n\t\t\tupdateTodo={crudOperations.updateTodo}\r\n\t\t\tupdateParams={updateParams}\r\n\t\t\tupdateMode={true}\r\n\t\t\tsetCurrentlyUpdating={setCurrentlyUpdating}\r\n\t\t\tdayToShow={moment(updateParams.deadline)}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div\r\n\t\t\tclassName={`\r\n\t\t\t${showingText ? 'testing-grid' : ''}\r\n\t\t`}\r\n\t\t>\r\n\t\t\t{showingText ? (\r\n\t\t\t\t<TodoForm addTodo={crudOperations.addTodo} dayToShow={dayToShow} />\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\r\n\t\t\t<div\r\n\t\t\t\tclassName={`${\r\n\t\t\t\t\tinsideDayWithTodos\r\n\t\t\t\t\t\t? 'list-todos-component-inside-day-with-todos'\r\n\t\t\t\t\t\t: 'list-todos-component'\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t{showIncompleteOnly\r\n\t\t\t\t\t\t? `${\r\n\t\t\t\t\t\t\t\tshowingText\r\n\t\t\t\t\t\t\t\t\t? `Showing only incomplete todos due on ${showingText}`\r\n\t\t\t\t\t\t\t\t\t: 'Showing: All'\r\n\t\t\t\t\t\t  }`\r\n\t\t\t\t\t\t: `${\r\n\t\t\t\t\t\t\t\tshowingText\r\n\t\t\t\t\t\t\t\t\t? `Showing all todos due on: ${showingText}`\r\n\t\t\t\t\t\t\t\t\t: 'Showing: Only incomplete'\r\n\t\t\t\t\t\t  }`}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{showIncompleteOnly\r\n\t\t\t\t\t\t? 'Click to show all'\r\n\t\t\t\t\t\t: 'Click to show only incomplete'}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tonClick={() => toggleShowIncompleteOnly(!showIncompleteOnly)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`\r\n\t\t\tall-todos-listed\r\n\t\t\t${insideDayWithTodos ? 'inside-day-with-todos' : ''}\r\n\t\t\t`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{sortedByDueDate.map((todo) => {\r\n\t\t\t\t\t\tconst momentObjFromTodo = moment(todo.deadline);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TodoView\r\n\t\t\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\t\t\ttodoObj={todo}\r\n\t\t\t\t\t\t\t\ttoggleCompleteTodo={crudOperations.toggleCompleteTodo}\r\n\t\t\t\t\t\t\t\tdeleteTodo={crudOperations.deleteTodo}\r\n\t\t\t\t\t\t\t\tmomentObjFromTodo={momentObjFromTodo}\r\n\t\t\t\t\t\t\t\tbeginEdit={handleTodoUpdate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListTodosView;\r\n\r\nfunction compareByDates(a, b) {\r\n\tconst aDate = moment(a.deadline);\r\n\tconst bDate = moment(b.deadline);\r\n\r\n\tlet returnValue;\r\n\taDate.isBefore(bDate)\r\n\t\t? (returnValue = -1)\r\n\t\t: bDate.isBefore(aDate)\r\n\t\t? (returnValue = 1)\r\n\t\t: (returnValue = 0);\r\n\r\n\treturn returnValue;\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport './DayWithTodos.css';\r\n\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport ListTodosView from '../ListTodosView/ListTodosView';\r\n\r\nfunction DayWithTodos({ dayToShow, todos, crudOperations }) {\r\n\tconst todosForThisDay = todos.filter((todo) =>\r\n\t\tdayToShow.isSame(todo.deadline, 'date')\r\n\t);\r\n\r\n\tconst [currentlyUpdating, setCurrentlyUpdating] = useState(false);\r\n\tconst [updateParams, setUpdateParams] = useState({});\r\n\r\n\tconst handleTodoUpdate = (todoObj) => {\r\n\t\tsetCurrentlyUpdating(true);\r\n\t\tsetUpdateParams(todoObj);\r\n\t};\r\n\r\n\treturn currentlyUpdating ? (\r\n\t\t<TodoForm\r\n\t\t\taddTodo={crudOperations.addTodo}\r\n\t\t\tupdateTodo={crudOperations.updateTodo}\r\n\t\t\tupdateParams={updateParams}\r\n\t\t\tupdateMode={true}\r\n\t\t\tsetCurrentlyUpdating={setCurrentlyUpdating}\r\n\t\t\tdayToShow={dayToShow}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div className='day-with-todos'>\r\n\t\t\t<div className='grid-day-with-todos'>\r\n\t\t\t\t{todosForThisDay.length > 0 ? (\r\n\t\t\t\t\t<ListTodosView\r\n\t\t\t\t\t\ttodos={todosForThisDay}\r\n\t\t\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t\t\t\tinsideDayWithTodos={true}\r\n\t\t\t\t\t\tshowingText={dayToShow.format('D [of] MMMM, YYYY')}\r\n\t\t\t\t\t\tdayToShow={dayToShow}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='day-w-out-todos'>\r\n\t\t\t\t\t\t<TodoForm addTodo={crudOperations.addTodo} dayToShow={dayToShow} />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<i>No todos due this day...</i>{' '}\r\n\t\t\t\t\t\t\t<u>{dayToShow.format('D [of] MMMM, YYYY')}</u>\r\n\t\t\t\t\t\t\t<p>Use the form to add a new todo on this day!</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DayWithTodos;\r\n","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport DayOfMonth from './DayOfMonth/DayOfMonth';\r\n\r\nimport './CalenderView.css';\r\nimport WeekDays from './WeekDays/WeekDays';\r\nimport DayWithTodos from '../DayWithTodos/DayWithTodos';\r\n\r\nfunction CalenderView({ todos, crudOperations }) {\r\n\tconst [momentObj, setMomentObject] = useState(() => moment());\r\n\r\n\t// Today should only change when the user manually refreshes the page\r\n\tconst [today, setToday] = useState(moment());\r\n\tconst [currentTime, setCurrentTime] = useState(\r\n\t\ttoday.toString().split(' ')[4]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrentTime(momentObj.toString().split(' ')[4]);\r\n\t}, [momentObj]);\r\n\r\n\tconst prevMonth = () => {\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.subtract(1, 'M')\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tsetMomentObject(newMomentObj);\r\n\t};\r\n\r\n\tconst nextMonth = () => {\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.add(1, 'M')\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tsetMomentObject(newMomentObj);\r\n\t};\r\n\r\n\tconst dateClicked = ({ target }) => {\r\n\t\tlet clickedDate;\r\n\t\tif (target.textContent === '|') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.parentNode.id.split('|')[0]);\r\n\t\t} else if (target.id === '') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.id.split('|')[0]);\r\n\t\t} else {\r\n\t\t\tclickedDate = parseInt(target.id.split('|')[0]);\r\n\t\t}\r\n\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.date(clickedDate)\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tsetMomentObject(newMomentObj);\r\n\t};\r\n\r\n\tconst renderDays = () => {\r\n\t\tconst components = [];\r\n\r\n\t\t// Get weekday of first of month as int to create \"shadow-days\" when a month doesnt start on a sunday\r\n\t\tconst numOfPlaceholderDays = momentObj.clone().startOf('month').format('e');\r\n\t\tfor (let i = 1; i <= numOfPlaceholderDays; i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth key={`null ${i} of month`} placeHolder={true} />\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tfor (let i = 1; i <= momentObj.daysInMonth(); i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth\r\n\t\t\t\t\tkey={`Day ${i} of month`}\r\n\t\t\t\t\tplaceHolder={false}\r\n\t\t\t\t\tday={i}\r\n\t\t\t\t\t// Today is only true when it's today\r\n\t\t\t\t\ttoday={itIsToday(today, i)}\r\n\t\t\t\t\tactive={itIsActive(momentObj, i)}\r\n\t\t\t\t\tcbFunc={dateClicked}\r\n\t\t\t\t\tnumOfTodos={getNumOfTodosDueThisDay(momentObj, todos, i)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn components;\r\n\t};\r\n\treturn (\r\n\t\t<div className='calendar'>\r\n\t\t\t<div className='month-view'>\r\n\t\t\t\t<div className='month-navigator'>\r\n\t\t\t\t\t<button onClick={prevMonth}>Prev month</button>\r\n\t\t\t\t\t<h2 className='current-month'>\r\n\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t{momentObj.format('MMMM')} - {momentObj.format('YYYY')}\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<button onClick={nextMonth}>Next month</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<WeekDays />\r\n\t\t\t\t<div className='grid-container calender-days'>{renderDays()}</div>\r\n\t\t\t</div>\r\n\t\t\t<DayWithTodos\r\n\t\t\t\tdayToShow={momentObj}\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tcrudOperations={crudOperations}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CalenderView;\r\n\r\nfunction getNumOfTodosDueThisDay(momentObj, todos, i) {\r\n\tconst compareDate = momentObj.clone().set('date', i).format('YYYY-MM-DD');\r\n\r\n\t// Get number of todos for this day\r\n\tconst num = todos.filter(\r\n\t\t(todo) => todo.deadline.split('T')[0] === compareDate\r\n\t).length;\r\n\r\n\treturn num;\r\n}\r\n\r\nfunction itIsActive(momentObj, activeDayAsInt) {\r\n\tconst activeDayFormatted = parseInt(momentObj.clone().format('D'), 10);\r\n\treturn activeDayFormatted === activeDayAsInt;\r\n}\r\n\r\nfunction itIsToday(todayObj, todayAsInt) {\r\n\tconst todayFormatted = parseInt(todayObj.clone().format('D'), 10);\r\n\treturn todayFormatted === todayAsInt;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport CalenderView from './Components/CalenderView/CalenderView';\r\nimport ListTodosView from './Components/ListTodosView/ListTodosView';\r\n\r\nfunction App() {\r\n\t// Todos is parsed from localStorage\r\n\t// or declared as an empty array\r\n\tconst [todos, setTodos] = useState(\r\n\t\tJSON.parse(localStorage.getItem('todos')) || []\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t}, [todos]);\r\n\r\n\tconst crudOperations = {\r\n\t\taddTodo: (todoObj) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\tconst copyOfTodos = [...todos];\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, todoObj);\r\n\t\t},\r\n\t\tdeleteTodo: (id) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\t// Replace todos with copyOfTodos\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos);\r\n\t\t},\r\n\t\ttoggleCompleteTodo: ({ id }) => {\r\n\t\t\t// Find relevant entry from saved todos\r\n\t\t\tconst todoToBeUpdated = todos.find((todo) => todo.id === id);\r\n\r\n\t\t\t// Update completed-property to opposite of its inital value\r\n\t\t\ttodoToBeUpdated.completed = !todoToBeUpdated.completed;\r\n\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, todoToBeUpdated);\r\n\t\t},\r\n\t\tupdateTodo: (updatedTodoObj) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter(\r\n\t\t\t\t(todo) => todo.id !== updatedTodoObj.id\r\n\t\t\t);\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, updatedTodoObj);\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<ListTodosView todos={todos} crudOperations={crudOperations} />\r\n\t\t\t<CalenderView todos={todos} crudOperations={crudOperations} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\nfunction customHookSetTodos(array, hookCallback, object) {\r\n\t// Add new version of object to array\r\n\t// unless object is missing\r\n\tif (object) array.push(object);\r\n\r\n\t// Replace todos with copyOfTodos\r\n\thookCallback(array);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './reset.css';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}